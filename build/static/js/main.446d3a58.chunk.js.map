{"version":3,"sources":["components/DeviceItem.jsx","components/GraphItem.jsx","components/StatisticOutputWeekday.jsx","components/TheLegend.jsx","components/StatisticOutput.jsx","store/actions/actions.js","containers/StatisticPage.jsx","store/reducers/fetchStatistic.js","store/reducers/usersData.js","store/store.js","index.jsx"],"names":["StyledDeviceItem","styled","button","styledProps","color","DeviceItem","props","useState","setColor","item","isChoosen","deviceId","n","disabled","v","onClick","StyledGraphItem","div","graphProps","height","GraphItem","views","maxViewsPerWeekday","elementHeight","setElementHeight","useEffect","GraphWrapper","StatisticOutputWeekday","weekdayData","adult","kid","old","undefined","young","WeekdaysWrapper","WeekdaysText","ColorsWrapper","ColorLabelWrapper","ColorLabel","TheLegend","StatisticOutputStyled","GraphPlane","GraphPlaneAndValues","GraphPlaneValues","StatisticOutput","devicesDataByWeekday","choosenDevices","forEach","device","o","date","dayOfViews","Date","getDay","ageViews","totalViewsPerWeekday","valueFromChoosenDevices","maxViews","weekday","getMaxViews","getStatisticData","data","StatisticPageWrapper","section","DevicesList","StatisticPage","usersDefaultData","useSelector","state","defaultData","usersCustomData","customData","isLoading","dispatch","useDispatch","toggleDevice","map","length","a","fetch","then","res","json","resault","usersData","action","type","find","splicedCustomData","splice","indexOf","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.446d3a58.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction DeviceItem (props) {\r\n    const [color, setColor] = useState(\"transparent\");\r\n    const {item, isChoosen} = props;\r\n    const deviceId = item.n;\r\n\r\n    function setColorOfChoosen () {\r\n        if (color === \"transparent\") {\r\n            setColor(\"green\");\r\n        } else {\r\n            setColor(\"transparent\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledDeviceItem\r\n            disabled={item.v === 0 ? \"disabled\" : null}\r\n            color={color}\r\n            onClick={() => {\r\n                setColorOfChoosen();\r\n                isChoosen(item);\r\n            }}\r\n        >\r\n            {deviceId}\r\n        </StyledDeviceItem>\r\n    );\r\n}\r\n\r\nconst StyledDeviceItem = styled.button(styledProps => ({\r\n    \"width\": \"100%\",\r\n    \"margin-bottom\": \"5px\",\r\n    \"padding\": \"7px 0\",\r\n    \"border\": \"1px solid black\",\r\n    \"text-align\": \"center\",\r\n    \"cursor\": \"pointer\",\r\n    \"background-color\": styledProps.color,\r\n    \"transition\": \"background-color 0.5s\",\r\n    \"&:hover\": {\r\n        \"background-color\": \"green\"\r\n    },\r\n    \"&:disabled\": {\r\n        \"cursor\": \"not-allowed\",\r\n        \"&:hover\": {\r\n            \"background-color\": \"unset\"\r\n        }\r\n    }\r\n}));\r\n\r\nexport default DeviceItem;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction GraphItem (props) {\r\n\r\n    const {views, color, maxViewsPerWeekday} = props;\r\n    const [elementHeight, setElementHeight] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (maxViewsPerWeekday !== 0) {\r\n            setElementHeight(240 / maxViewsPerWeekday * views);\r\n        }\r\n        if (maxViewsPerWeekday === 0) {\r\n            setElementHeight(0);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <StyledGraphItem height={elementHeight} color={color} />\r\n    );\r\n}\r\n\r\nconst StyledGraphItem = styled.div(graphProps => ({\r\n    \"width\": \"100%\",\r\n    \"height\": graphProps.height,\r\n    \"background-color\": graphProps.color,\r\n    \"transition\": \"height 0.5s\"\r\n}));\r\n\r\nexport default GraphItem;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GraphItem from \"./GraphItem\";\r\n\r\nfunction StatisticOutputWeekday (props) {\r\n    const {weekdayData, maxViewsPerWeekday} = props;\r\n\r\n    return (\r\n        <GraphWrapper>\r\n            <GraphItem views={weekdayData.adult} color=\"#5351FF\" maxViewsPerWeekday={maxViewsPerWeekday} />\r\n            <GraphItem views={weekdayData.kid} color=\"#0D9900\" maxViewsPerWeekday={maxViewsPerWeekday} />\r\n            <GraphItem views={weekdayData.old} color=\"#FF796D\" maxViewsPerWeekday={maxViewsPerWeekday} />\r\n            <GraphItem views={weekdayData.undefined} color=\"#8492A1\" maxViewsPerWeekday={maxViewsPerWeekday} />\r\n            <GraphItem views={weekdayData.young} color=\"#8BD8FF\" maxViewsPerWeekday={maxViewsPerWeekday} />\r\n        </GraphWrapper>\r\n    );\r\n}\r\n\r\nconst GraphWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n    width: 60px;\r\n    height: 100%;\r\n`;\r\n\r\nexport default StatisticOutputWeekday;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction TheLegend () {\r\n\r\n    return (\r\n        <div>\r\n            <WeekdaysWrapper>\r\n                <WeekdaysText>{\"Sun\"}</WeekdaysText>\r\n                <WeekdaysText>{\"Mon\"}</WeekdaysText>\r\n                <WeekdaysText>{\"Tue\"}</WeekdaysText>\r\n                <WeekdaysText>{\"Wed\"}</WeekdaysText>\r\n                <WeekdaysText>{\"Thu\"}</WeekdaysText>\r\n                <WeekdaysText>{\"Fri\"}</WeekdaysText>\r\n                <WeekdaysText>{\"Sat\"}</WeekdaysText>\r\n            </WeekdaysWrapper>\r\n            <ColorsWrapper>\r\n                <ColorLabelWrapper>\r\n                    <span>{\"Adult\"}</span>\r\n                    <ColorLabel color=\"#5351FF\" />\r\n                </ColorLabelWrapper>\r\n                <ColorLabelWrapper>\r\n                    <span>{\"Young\"}</span>\r\n                    <ColorLabel color=\"#8BD8FF\" />\r\n                </ColorLabelWrapper>\r\n                <ColorLabelWrapper>\r\n                    <span>{\"Undefined\"}</span>\r\n                    <ColorLabel color=\"#8492A1\" />\r\n                </ColorLabelWrapper>\r\n                <ColorLabelWrapper>\r\n                    <span>{\"Kid\"}</span>\r\n                    <ColorLabel color=\"#0D9900\" />\r\n                </ColorLabelWrapper>\r\n                <ColorLabelWrapper>\r\n                    <span>{\"Old\"}</span>\r\n                    <ColorLabel color=\"#FF796D\" />\r\n                </ColorLabelWrapper>\r\n            </ColorsWrapper>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst WeekdaysWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    width: 93%;\r\n`;\r\n\r\nconst WeekdaysText = styled.div`\r\n    width: 60px;\r\n    text-align: center;\r\n`;\r\n\r\nconst ColorsWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    width: 100%;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst ColorLabelWrapper = styled.div`\r\n    display:flex;\r\n    flex-direction: column;\r\n    align-items: center\r\n`;\r\n\r\nconst ColorLabel = styled.div(props => ({\r\n    \"width\": \"30px\",\r\n    \"height\": \"15px\",\r\n    \"margin-top\": \"5px\",\r\n    \"background-color\": props.color\r\n\r\n}));\r\n\r\nexport default TheLegend;\r\n","import React from \"react\";\r\nimport StatisticOutputWeekday from \"./StatisticOutputWeekday\";\r\nimport styled from \"styled-components\";\r\nimport TheLegend from \"./TheLegend\";\r\n\r\nfunction StatisticOutput (props) {\r\n    const devicesDataByWeekday = {\r\n        \"0\": {\"adult\": 0, \"kid\": 0, \"old\": 0, \"undefined\": 0, \"young\": 0, \"totalViewsPerWeekday\": 0},\r\n        \"1\": {\"adult\": 0, \"kid\": 0, \"old\": 0, \"undefined\": 0, \"young\": 0, \"totalViewsPerWeekday\": 0},\r\n        \"2\": {\"adult\": 0, \"kid\": 0, \"old\": 0, \"undefined\": 0, \"young\": 0, \"totalViewsPerWeekday\": 0},\r\n        \"3\": {\"adult\": 0, \"kid\": 0, \"old\": 0, \"undefined\": 0, \"young\": 0, \"totalViewsPerWeekday\": 0},\r\n        \"4\": {\"adult\": 0, \"kid\": 0, \"old\": 0, \"undefined\": 0, \"young\": 0, \"totalViewsPerWeekday\": 0},\r\n        \"5\": {\"adult\": 0, \"kid\": 0, \"old\": 0, \"undefined\": 0, \"young\": 0, \"totalViewsPerWeekday\": 0},\r\n        \"6\": {\"adult\": 0, \"kid\": 0, \"old\": 0, \"undefined\": 0, \"young\": 0, \"totalViewsPerWeekday\": 0}\r\n    };\r\n\r\n    const {choosenDevices} = props;\r\n\r\n    choosenDevices.forEach(device => {\r\n        device.o.forEach(date => {\r\n            const day = new Date(date.n);\r\n            const dayOfViews = day.getDay();\r\n            date.o.forEach(ageViews => {\r\n                devicesDataByWeekday[dayOfViews].totalViewsPerWeekday += ageViews.v;\r\n                devicesDataByWeekday[dayOfViews][ageViews.n] += ageViews.v;\r\n            });\r\n        });\r\n    });\r\n\r\n    function getMaxViews (valueFromChoosenDevices) {\r\n        let maxViews = 0;\r\n        for (const weekday in valueFromChoosenDevices) {\r\n            if (valueFromChoosenDevices[weekday].totalViewsPerWeekday > maxViews) {\r\n                maxViews = valueFromChoosenDevices[weekday].totalViewsPerWeekday;\r\n            }\r\n        }\r\n        return maxViews;\r\n    }\r\n\r\n    const maxViewsPerWeekday = getMaxViews(devicesDataByWeekday);\r\n\r\n    return (\r\n        <StatisticOutputStyled>\r\n            <h3>{\"Total views: Age (by day of week)\"}</h3>\r\n            <GraphPlaneAndValues>\r\n                <GraphPlane>\r\n                    <StatisticOutputWeekday weekdayData={devicesDataByWeekday[\"0\"]} maxViewsPerWeekday={maxViewsPerWeekday} />\r\n                    <StatisticOutputWeekday weekdayData={devicesDataByWeekday[\"1\"]} maxViewsPerWeekday={maxViewsPerWeekday} />\r\n                    <StatisticOutputWeekday weekdayData={devicesDataByWeekday[\"2\"]} maxViewsPerWeekday={maxViewsPerWeekday} />\r\n                    <StatisticOutputWeekday weekdayData={devicesDataByWeekday[\"3\"]} maxViewsPerWeekday={maxViewsPerWeekday} />\r\n                    <StatisticOutputWeekday weekdayData={devicesDataByWeekday[\"4\"]} maxViewsPerWeekday={maxViewsPerWeekday} />\r\n                    <StatisticOutputWeekday weekdayData={devicesDataByWeekday[\"5\"]} maxViewsPerWeekday={maxViewsPerWeekday} />\r\n                    <StatisticOutputWeekday weekdayData={devicesDataByWeekday[\"6\"]} maxViewsPerWeekday={maxViewsPerWeekday} />\r\n                </GraphPlane>\r\n                <GraphPlaneValues>\r\n                    <span>{maxViewsPerWeekday}</span>\r\n                    <span>{maxViewsPerWeekday * 0.75}</span>\r\n                    <span>{maxViewsPerWeekday / 2}</span>\r\n                    <span>{maxViewsPerWeekday * 0.25}</span>\r\n                </GraphPlaneValues>\r\n            </GraphPlaneAndValues>\r\n            <TheLegend />\r\n        </StatisticOutputStyled>\r\n    );\r\n}\r\n\r\nconst StatisticOutputStyled = styled.div`\r\n    width: 70%;\r\n    margin-left: 20px;\r\n`;\r\n\r\nconst GraphPlane = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n    align-items: flex-end;\r\n    width: 531px;\r\n    height: 300px;\r\n    border: 1px solid black;\r\n    background-color: #ffffff;\r\n    background-size: 76px 60px;\r\n    background-image:\r\n        linear-gradient(to right, grey 1px, transparent 1px),\r\n        linear-gradient(to bottom, grey 1px, transparent 1px);\r\n`;\r\n\r\nconst GraphPlaneAndValues = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst GraphPlaneValues = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    height: 200px;\r\n    margin-left: 5px;\r\n`;\r\n\r\nexport default StatisticOutput;\r\n","export function getStatisticData (data) {\r\n    return {\r\n        data,\r\n        \"type\": \"GET_STATISTIC_DATA\"\r\n    };\r\n}\r\n\r\nexport function toggleDevice (device) {\r\n    return {\r\n        device,\r\n        \"type\": \"TOGGLE_DEVICE\"\r\n    };\r\n}\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport DeviceItem from \"../components/DeviceItem\";\r\nimport React from \"react\";\r\nimport StatisticOutput from \"../components/StatisticOutput\";\r\nimport styled from \"styled-components\";\r\nimport {toggleDevice} from \"../store/actions/actions\";\r\n\r\nfunction StatisticPage () {\r\n    const usersDefaultData = useSelector(state => state.defaultData);\r\n    const usersCustomData = useSelector(state => state.customData);\r\n    const isLoading = useSelector(state => state.isLoading);\r\n    const dispatch = useDispatch();\r\n\r\n    function isChoosen (device) {\r\n        dispatch(toggleDevice(device));\r\n    }\r\n\r\n    function choosenDevices () {\r\n        if (usersCustomData.length === 0) {\r\n            return usersDefaultData;\r\n        }\r\n        if (usersCustomData.length !== 0) {\r\n            return usersCustomData;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    if (isLoading === true) {\r\n        return (\r\n            <div>\r\n                {\"Please wait\"}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (isLoading === false) {\r\n        return (\r\n            <StatisticPageWrapper>\r\n                <DevicesList>\r\n                    {\r\n                        usersDefaultData.map(item => {\r\n                            return (\r\n                                <DeviceItem\r\n                                    item={item}\r\n                                    key={item.n}\r\n                                    isChoosen={isChoosen}\r\n                                />\r\n                            );\r\n                        })\r\n                    }\r\n                </DevicesList>\r\n                <StatisticOutput choosenDevices={choosenDevices()} />\r\n            </StatisticPageWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst StatisticPageWrapper = styled.section`\r\n    width: 840px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 0px auto;\r\n    padding: 30px 10px;\r\n    background-color: #D4D9F0;\r\n`;\r\n\r\nconst DevicesList = styled.div`\r\n    width: 20%;\r\n`;\r\n\r\nexport default StatisticPage;\r\n","import {getStatisticData} from \"../actions/actions.js\";\r\n\r\nexport default async function fetchStatistic (dispatch) {\r\n    const resault = await fetch(\"https://analytics.3divi.ru/api/v2/statistics/user/2088/devices/dates/ages/?key=d3aa35bde5ef46899b91aca9c66e174e&b=2020/03/08%2012:00:00&e=2020/09/08%2012:00:00&tzo=0\")\r\n        .then(res => res.json());\r\n    dispatch(getStatisticData(resault));\r\n}\r\n","function usersData (state = {\r\n    \"customData\": [],\r\n    \"defaultData\": [],\r\n    \"isLoading\": true\r\n}, action) {\r\n    switch (action.type) {\r\n    case \"GET_STATISTIC_DATA\":\r\n        state.isLoading = false;\r\n        state.defaultData = action.data.data.o;\r\n        return state;\r\n\r\n    case \"TOGGLE_DEVICE\":\r\n        const isChoosen = state.customData.find(item => item.n === action.device.n);\r\n        if (isChoosen === undefined) {\r\n            state.customData = [...state.customData, action.device];\r\n        }\r\n        if (isChoosen !== undefined) {\r\n            const splicedCustomData = [...state.customData];\r\n            splicedCustomData.splice(state.customData.indexOf(isChoosen), 1);\r\n            state.customData = splicedCustomData;\r\n        }\r\n        return state;\r\n\r\n    default: return state;\r\n    }\r\n}\r\n\r\nexport default usersData;\r\n","import {applyMiddleware, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport usersData from \"./reducers/usersData\";\r\n\r\nconst store = createStore(usersData, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n","import \"./index.css\";\r\nimport {Provider} from \"react-redux\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport StatisticPage from \"./containers/StatisticPage\";\r\nimport fetchStatistic from \"./store/reducers/fetchStatistic.js\";\r\nimport store from \"./store/store.js\";\r\n\r\nstore.dispatch(fetchStatistic);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <StatisticPage />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}
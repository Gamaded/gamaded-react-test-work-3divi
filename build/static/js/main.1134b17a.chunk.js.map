{"version":3,"sources":["components/DeviceItem.jsx","components/GraphItem.jsx","components/StatisticOutputWeekday.jsx","components/TheLegend.jsx","components/StatisticOutput.jsx","store/actions/actions.js","containers/StatisticPage.jsx","store/reducers/fetchStatistic.js","store/reducers/usersData.js","store/store.js","index.jsx"],"names":["StyledDeviceItem","styled","button","styledProps","color","DeviceItem","props","useState","setColor","item","isChoosen","deviceId","n","disabled","v","onClick","StyledGraphItem","div","graphProps","height","GraphItem","views","maxViewsPerWeekday","elementHeight","setElementHeight","useEffect","GraphWrapper","StatisticOutputWeekday","weekdayData","adult","kid","old","undefined","young","WeekdaysWrapper","WeekdaysText","ColorsWrapper","ColorLabelWrapper","ColorLabel","TheLegend","StatisticOutputStyled","GraphPlane","GraphPlaneAndValues","GraphPlaneValues","StatisticOutput","devicesDataByWeekday","choosenDevices","forEach","device","o","date","dayOfViews","Date","getDay","ageViews","totalViewsPerWeekday","valueFromChoosenDevices","maxViews","weekday","getMaxViews","getStatisticData","data","StatisticPageWrapper","section","DevicesList","StatisticPage","usersDefaultData","useSelector","state","defaultData","usersCustomData","customData","isLoading","dispatch","useDispatch","toggleDevice","map","length","a","fetch","then","res","json","resault","usersData","action","type","find","splicedCustomData","splice","indexOf","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1134b17a.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport styled from \"styled-components\";\n\nfunction DeviceItem (props) {\n    const [color, setColor] = useState(\"transparent\");\n    const {item, isChoosen} = props;\n    const deviceId = item.n;\n\n    function setColorOfChoosen () {\n        if (color === \"transparent\") {\n            setColor(\"green\");\n        } else {\n            setColor(\"transparent\");\n        }\n    }\n\n    return (\n        <StyledDeviceItem\n            disabled={item.v === 0 ? \"disabled\" : null}\n            color={color}\n            onClick={() => {\n                setColorOfChoosen();\n                isChoosen(item);\n            }}\n        >\n            {deviceId}\n        </StyledDeviceItem>\n    );\n}\n\nconst StyledDeviceItem = styled.button(styledProps => ({\n    \"width\": \"100%\",\n    \"margin-bottom\": \"5px\",\n    \"padding\": \"7px 0\",\n    \"border\": \"1px solid black\",\n    \"text-align\": \"center\",\n    \"cursor\": \"pointer\",\n    \"background-color\": styledProps.color,\n    \"transition\": \"background-color 0.5s\",\n    \"&:hover\": {\n        \"background-color\": \"green\"\n    },\n    \"&:disabled\": {\n        \"cursor\": \"not-allowed\",\n        \"&:hover\": {\n            \"background-color\": \"unset\"\n        }\n    }\n}));\n\nexport default DeviceItem;\n","import React, {useEffect, useState} from \"react\";\nimport styled from \"styled-components\";\n\nfunction GraphItem (props) {\n\n    const {views, color, maxViewsPerWeekday} = props;\n    const [elementHeight, setElementHeight] = useState(0);\n\n    useEffect(() => {\n        if (maxViewsPerWeekday !== 0) {\n            setElementHeight(240 / maxViewsPerWeekday * views);\n        }\n        if (maxViewsPerWeekday === 0) {\n            setElementHeight(0);\n        }\n    });\n\n    return (\n        <StyledGraphItem height={elementHeight} color={color} />\n    );\n}\n\nconst StyledGraphItem = styled.div(graphProps => ({\n    \"width\": \"100%\",\n    \"height\": graphProps.height,\n    \"background-color\": graphProps.color,\n    \"transition\": \"height 0.5s\"\n}));\n\nexport default GraphItem;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport GraphItem from \"./GraphItem\";\n\nfunction StatisticOutputWeekday (props) {\n    const {weekdayData, maxViewsPerWeekday} = props;\n\n    return (\n        <GraphWrapper>\n            <GraphItem views={weekdayData.adult} color=\"#5351FF\" maxViewsPerWeekday={maxViewsPerWeekday} />\n            <GraphItem views={weekdayData.kid} color=\"#0D9900\" maxViewsPerWeekday={maxViewsPerWeekday} />\n            <GraphItem views={weekdayData.old} color=\"#FF796D\" maxViewsPerWeekday={maxViewsPerWeekday} />\n            <GraphItem views={weekdayData.undefined} color=\"#8492A1\" maxViewsPerWeekday={maxViewsPerWeekday} />\n            <GraphItem views={weekdayData.young} color=\"#8BD8FF\" maxViewsPerWeekday={maxViewsPerWeekday} />\n        </GraphWrapper>\n    );\n}\n\nconst GraphWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    width: 60px;\n    height: 100%;\n`;\n\nexport default StatisticOutputWeekday;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction TheLegend () {\n\n    return (\n        <div>\n            <WeekdaysWrapper>\n                <WeekdaysText>{\"Sun\"}</WeekdaysText>\n                <WeekdaysText>{\"Mon\"}</WeekdaysText>\n                <WeekdaysText>{\"Tue\"}</WeekdaysText>\n                <WeekdaysText>{\"Wed\"}</WeekdaysText>\n                <WeekdaysText>{\"Thu\"}</WeekdaysText>\n                <WeekdaysText>{\"Fri\"}</WeekdaysText>\n                <WeekdaysText>{\"Sat\"}</WeekdaysText>\n            </WeekdaysWrapper>\n            <ColorsWrapper>\n                <ColorLabelWrapper>\n                    <span>{\"Adult\"}</span>\n                    <ColorLabel color=\"#5351FF\" />\n                </ColorLabelWrapper>\n                <ColorLabelWrapper>\n                    <span>{\"Young\"}</span>\n                    <ColorLabel color=\"#8BD8FF\" />\n                </ColorLabelWrapper>\n                <ColorLabelWrapper>\n                    <span>{\"Undefined\"}</span>\n                    <ColorLabel color=\"#8492A1\" />\n                </ColorLabelWrapper>\n                <ColorLabelWrapper>\n                    <span>{\"Kid\"}</span>\n                    <ColorLabel color=\"#0D9900\" />\n                </ColorLabelWrapper>\n                <ColorLabelWrapper>\n                    <span>{\"Old\"}</span>\n                    <ColorLabel color=\"#FF796D\" />\n                </ColorLabelWrapper>\n            </ColorsWrapper>\n        </div>\n    );\n}\n\nconst WeekdaysWrapper = styled.div`\n    display: flex;\n    justify-content: space-around;\n    width: 93%;\n`;\n\nconst WeekdaysText = styled.div`\n    width: 60px;\n    text-align: center;\n`;\n\nconst ColorsWrapper = styled.div`\n    display: flex;\n    justify-content: space-around;\n    width: 100%;\n    margin-top: 10px;\n`;\n\nconst ColorLabelWrapper = styled.div`\n    display:flex;\n    flex-direction: column;\n    align-items: center\n`;\n\nconst ColorLabel = styled.div(props => ({\n    \"width\": \"30px\",\n    \"height\": \"15px\",\n    \"margin-top\": \"5px\",\n    \"background-color\": props.color\n\n}));\n\nexport default TheLegend;\n","import React from \"react\";\nimport StatisticOutputWeekday from \"./StatisticOutputWeekday\";\nimport styled from \"styled-components\";\nimport TheLegend from \"./TheLegend\";\n\nfunction StatisticOutput (props) {\n    const devicesDataByWeekday = {\n        \"0\": {\"adult\": 0, \"kid\": 0, \"old\": 0, \"undefined\": 0, \"young\": 0, \"totalViewsPerWeekday\": 0},\n        \"1\": {\"adult\": 0, \"kid\": 0, \"old\": 0, \"undefined\": 0, \"young\": 0, \"totalViewsPerWeekday\": 0},\n        \"2\": {\"adult\": 0, \"kid\": 0, \"old\": 0, \"undefined\": 0, \"young\": 0, \"totalViewsPerWeekday\": 0},\n        \"3\": {\"adult\": 0, \"kid\": 0, \"old\": 0, \"undefined\": 0, \"young\": 0, \"totalViewsPerWeekday\": 0},\n        \"4\": {\"adult\": 0, \"kid\": 0, \"old\": 0, \"undefined\": 0, \"young\": 0, \"totalViewsPerWeekday\": 0},\n        \"5\": {\"adult\": 0, \"kid\": 0, \"old\": 0, \"undefined\": 0, \"young\": 0, \"totalViewsPerWeekday\": 0},\n        \"6\": {\"adult\": 0, \"kid\": 0, \"old\": 0, \"undefined\": 0, \"young\": 0, \"totalViewsPerWeekday\": 0}\n    };\n\n    const {choosenDevices} = props;\n\n    choosenDevices.forEach(device => {\n        device.o.forEach(date => {\n            const day = new Date(date.n);\n            const dayOfViews = day.getDay();\n            date.o.forEach(ageViews => {\n                devicesDataByWeekday[dayOfViews].totalViewsPerWeekday += ageViews.v;\n                devicesDataByWeekday[dayOfViews][ageViews.n] += ageViews.v;\n            });\n        });\n    });\n\n    function getMaxViews (valueFromChoosenDevices) {\n        let maxViews = 0;\n        for (const weekday in valueFromChoosenDevices) {\n            if (valueFromChoosenDevices[weekday].totalViewsPerWeekday > maxViews) {\n                maxViews = valueFromChoosenDevices[weekday].totalViewsPerWeekday;\n            }\n        }\n        return maxViews;\n    }\n\n    const maxViewsPerWeekday = getMaxViews(devicesDataByWeekday);\n\n    return (\n        <StatisticOutputStyled>\n            <h3>{\"Total views: Age (by dau of week)\"}</h3>\n            <GraphPlaneAndValues>\n                <GraphPlane>\n                    <StatisticOutputWeekday weekdayData={devicesDataByWeekday[\"0\"]} maxViewsPerWeekday={maxViewsPerWeekday} />\n                    <StatisticOutputWeekday weekdayData={devicesDataByWeekday[\"1\"]} maxViewsPerWeekday={maxViewsPerWeekday} />\n                    <StatisticOutputWeekday weekdayData={devicesDataByWeekday[\"2\"]} maxViewsPerWeekday={maxViewsPerWeekday} />\n                    <StatisticOutputWeekday weekdayData={devicesDataByWeekday[\"3\"]} maxViewsPerWeekday={maxViewsPerWeekday} />\n                    <StatisticOutputWeekday weekdayData={devicesDataByWeekday[\"4\"]} maxViewsPerWeekday={maxViewsPerWeekday} />\n                    <StatisticOutputWeekday weekdayData={devicesDataByWeekday[\"5\"]} maxViewsPerWeekday={maxViewsPerWeekday} />\n                    <StatisticOutputWeekday weekdayData={devicesDataByWeekday[\"6\"]} maxViewsPerWeekday={maxViewsPerWeekday} />\n                </GraphPlane>\n                <GraphPlaneValues>\n                    <span>{maxViewsPerWeekday}</span>\n                    <span>{maxViewsPerWeekday * 0.75}</span>\n                    <span>{maxViewsPerWeekday / 2}</span>\n                    <span>{maxViewsPerWeekday * 0.25}</span>\n                </GraphPlaneValues>\n            </GraphPlaneAndValues>\n            <TheLegend />\n        </StatisticOutputStyled>\n    );\n}\n\nconst StatisticOutputStyled = styled.div`\n    width: 70%;\n    margin-left: 20px;\n`;\n\nconst GraphPlane = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: flex-end;\n    width: 531px;\n    height: 300px;\n    border: 1px solid black;\n    background-color: #ffffff;\n    background-size: 76px 60px;\n    background-image:\n        linear-gradient(to right, grey 1px, transparent 1px),\n        linear-gradient(to bottom, grey 1px, transparent 1px);\n`;\n\nconst GraphPlaneAndValues = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst GraphPlaneValues = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 200px;\n    margin-left: 5px;\n`;\n\nexport default StatisticOutput;\n","export function getStatisticData (data) {\n    return {\n        data,\n        \"type\": \"GET_STATISTIC_DATA\"\n    };\n}\n\nexport function toggleDevice (device) {\n    return {\n        device,\n        \"type\": \"TOGGLE_DEVICE\"\n    };\n}\n","import {useDispatch, useSelector} from \"react-redux\";\nimport DeviceItem from \"../components/DeviceItem\";\nimport React from \"react\";\nimport StatisticOutput from \"../components/StatisticOutput\";\nimport styled from \"styled-components\";\nimport {toggleDevice} from \"../store/actions/actions\";\n\nfunction StatisticPage () {\n    const usersDefaultData = useSelector(state => state.defaultData);\n    const usersCustomData = useSelector(state => state.customData);\n    const isLoading = useSelector(state => state.isLoading);\n    const dispatch = useDispatch();\n\n    function isChoosen (device) {\n        dispatch(toggleDevice(device));\n    }\n\n    function choosenDevices () {\n        if (usersCustomData.length === 0) {\n            return usersDefaultData;\n        }\n        if (usersCustomData.length !== 0) {\n            return usersCustomData;\n        }\n        return null;\n    }\n\n    if (isLoading === true) {\n        return (\n            <div>\n                {\"Please wait\"}\n            </div>\n        );\n    }\n\n    if (isLoading === false) {\n        return (\n            <StatisticPageWrapper>\n                <DevicesList>\n                    {\n                        usersDefaultData.map(item => {\n                            return (\n                                <DeviceItem\n                                    item={item}\n                                    key={item.n}\n                                    isChoosen={isChoosen}\n                                />\n                            );\n                        })\n                    }\n                </DevicesList>\n                <StatisticOutput choosenDevices={choosenDevices()} />\n            </StatisticPageWrapper>\n        );\n    }\n}\n\nconst StatisticPageWrapper = styled.section`\n    width: 840px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0px auto;\n    padding: 30px 10px;\n    background-color: #D4D9F0;\n`;\n\nconst DevicesList = styled.div`\n    width: 20%;\n`;\n\nexport default StatisticPage;\n","import {getStatisticData} from \"../actions/actions.js\";\n\nexport default async function fetchStatistic (dispatch) {\n    const resault = await fetch(\"https://analytics.3divi.ru/api/v2/statistics/user/2088/devices/dates/ages/?key=d3aa35bde5ef46899b91aca9c66e174e&b=2020/03/08%2012:00:00&e=2020/09/08%2012:00:00&tzo=0\")\n        .then(res => res.json());\n    dispatch(getStatisticData(resault));\n}\n","function usersData (state = {\n    \"customData\": [],\n    \"defaultData\": [],\n    \"isLoading\": true\n}, action) {\n    switch (action.type) {\n    case \"GET_STATISTIC_DATA\":\n        state.isLoading = false;\n        state.defaultData = action.data.data.o;\n        return state;\n\n    case \"TOGGLE_DEVICE\":\n        const isChoosen = state.customData.find(item => item.n === action.device.n);\n        if (isChoosen === undefined) {\n            state.customData = [...state.customData, action.device];\n        }\n        if (isChoosen !== undefined) {\n            const splicedCustomData = [...state.customData];\n            splicedCustomData.splice(state.customData.indexOf(isChoosen), 1);\n            state.customData = splicedCustomData;\n        }\n        return state;\n\n    default: return state;\n    }\n}\n\nexport default usersData;\n","import {applyMiddleware, createStore} from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport usersData from \"./reducers/usersData\";\n\nconst store = createStore(usersData, applyMiddleware(thunkMiddleware));\n\nexport default store;\n","import \"./index.css\";\nimport {Provider} from \"react-redux\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport StatisticPage from \"./containers/StatisticPage\";\nimport fetchStatistic from \"./store/reducers/fetchStatistic.js\";\nimport store from \"./store/store.js\";\n\nstore.dispatch(fetchStatistic);\n\nReactDOM.render(\n    <Provider store={store}>\n        <StatisticPage />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}